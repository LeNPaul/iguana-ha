{
   "post": {
      "ParameterTable": true,
      "Usage": "net.http.post{url=&#60;value&#62; [, timeout=&#60;value&#62;] [, ...]} <b>or</b> net.http.post(&#60;value&#62;)",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.post",
      "SummaryLine": "Fetches data from an HTTP address using the POST method.",
      "Desc": "Fetches data from an HTTP address using the POST method.",
      "Returns": [
         {
            "Desc": "Response data <u>string</u>."
         },
         {
            "Desc": "Response code <u>integer</u>."
         },
         {
            "Desc": "Response headers <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>local Results = net.http.post{url='http://www.interfaceware.com',  parameters={key='value'}}</pre>"
      ],
      "Parameters": [
         {
            "url": {
               "Desc": "The URL to fetch data from <u>string</u>."
            }
         },
         {
            "timeout": {
               "Desc": "Timeout for the operation (default = 15 seconds) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "parameters": {
               "Desc": "A table of POST parameters to be passed to the server. E.g., {q='a name'} would be passed as \"q=a&percnt;20name\" <u>string</u>.",
               "Opt": true
            }
         },
         {
            "get_parameters": {
               "Desc": "A table of GET parameters to be passed to the server, and is appended to existing parameters in 'url'. E.g., {q='a name'} would be passed as \"?q=a&percnt;20name\" <u>string</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}). By default, {['Content-Type']='application/x-www-form-urlencoded'} is assumed <u>string</u>.",
               "Opt": true
            }
         },
         {
            "response_headers_format": {
               "Desc": "Specifies the output format of the response headers: 'default' - a table of key/value pairs from the last response after redirects, where the value is the last value for the given header key; 'raw' - a table containing every line of every header, including redirects; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} where the values are from the last response after redirects <u>table</u>.",
               "Opt": true
            }
         },
         {
            "method": {
               "Desc": "The method to use (default = POST) <u>string</u>.",
               "Opt": true
            }
         },
         {
            "body": {
               "Desc": "Data to be sent to the server. Note that this content should be appropriate for the given headers. No escaping is done. When specified, overrides 'parameters' <u>string</u>.",
               "Opt": true
            }
         },
         {
            "auth": {
 	       "Desc": "The 'auth' table, when used, contains these parameters:<br/><ul>   <li>username : the username to send to the HTTP server.</li>   <li>password : the password to send to the HTTP server.</li>   <li>method : optional: the authorization method(s) to allow.  See below.</li>   <li>follow : optional: continue authorization attempts after redirect.This defaults to false to avoid compromising security.</li></ul><p>The authentication method defaults to 'basic', but can be changed to:'digest', 'digest-ie', 'gss-negotiate', 'ntlm', 'any' (allow any method),'anysafe' (not 'basic'), or a combination (e.g., {'digest','digest-ie'}).</p><p>When more than one method is allowed, the server will be asked which it supports before authentication is attempted.</p> <u>table</u>",
               "Opt": true
            }
         },
         {
            "ssl": {
 	       "Desc": "The 'ssl' table, when used, may contain these parameters:<br/><ul><li>cert : the name of your certificate file.</li><li>cert_type : your certificate's type: PEM (default) or DER.</li><li>key : the name of your private key file.</li><li>key_pass : the password to access your private key.</li><li>key_type : your private key's type: PEM (default), DER, or ENG.</li><li>ssl_engine : the engine to use with 'key_type' ENG.</li><li>verify_peer : verify peer certificate (default true).</li><li>verify_host : verify host certificate matches URL (default true).</li><li>ca_file : the certificate(s) file to use for peer verification.</li><li>issuer_cert : the PEM certificate file to validate the issuer of the peer's certificate during peer validation.</li><li>crl_file : the name of the certificate revocation list to use during peer validation.</li><li>ssl_version : use a particular SSL version(s). Possible values are ssl-v3, tls-v1, tls-v1.1, tls-v1.2. Default behaviour is to try tls-v1.2 then tls-v1.1. ssl-v2 is no longer supported and ssl-v3 won't be used unless specified. Specifying tls-v1 will allow connections to use all tls versions (starting with tls-v1.2 down to tls-v1.0).</li><li>cipher_list : Provide a list of ciphers in OpenSSL format to use. By default Iguana uses a list selected for optimal security.</li></ul> <u>table</u>",
               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug": {
               "Desc": "When true return verbose debug information - errors thrown will also contain debug information (default = false) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "live": {
               "Desc": "When true, requests are sent while in the editor (default = false) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   },
   "delete": {
      "ParameterTable": true,
      "Usage": "net.http.delete{url=&#60;value&#62; [, timeout=&#60;value&#62;] [, ...]} <b>or</b> net.http.delete(&#60;value&#62;)",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.delete",
      "SummaryLine": "Removes a resource from an HTTP site using the DELETE method.",
      "Desc": "Removes a resource from an HTTP site using the DELETE method.",
      "Returns": [
         {
            "Desc": "Response data <u>string</u>."
         },
         {
            "Desc": "Response code <u>integer</u>."
         },
         {
            "Desc": "Response headers <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>local Results = net.http.delete{url='http://www.interfaceware.com/not-real-example'}</pre>"
      ],
      "Parameters": [
         {
            "url": {
               "Desc": "The URL to delete <u>string</u>."
            }
         },
         {
            "timeout": {
               "Desc": "Timeout for the operation (default = 15 seconds) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}) <u>table</u>.",
               "Opt": true
            }
         },
         {
            "response_headers_format": {
               "Desc": "Specifies the output format of the response headers: 'default' - a table of key/value pairs from the last response after redirects, where the value is the last value for the given header key; 'raw' - a table containing every line of every header, including redirects; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} where the values are from the last response after redirects <u>table</u>.",
               "Opt": true
            }
         },
         {
            "method": {
               "Desc": "The method to use (default = DELETE) <u>string</u>.",
               "Opt": true
            }
         },
         {
            "auth": {
 	       "Desc": "The 'auth' table, when used, contains these parameters:<br/><ul>   <li>username : the username to send to the HTTP server.</li>   <li>password : the password to send to the HTTP server.</li>   <li>method : optional: the authorization method(s) to allow.  See below.</li>   <li>follow : optional: continue authorization attempts after redirect.This defaults to false to avoid compromising security.</li></ul><p>The authentication method defaults to 'basic', but can be changed to:'digest', 'digest-ie', 'gss-negotiate', 'ntlm', 'any' (allow any method),'anysafe' (not 'basic'), or a combination (e.g., {'digest','digest-ie'}).</p><p>When more than one method is allowed, the server will be asked which it supports before authentication is attempted.</p><u>table</u>",
               "Opt": true
            }
         },
         {
            "ssl": {
               "Desc": "The 'ssl' table, when used, may contain these parameters:<br/><ul><li>cert : the name of your certificate file.</li><li>cert_type : your certificate's type: PEM (default) or DER.</li><li>key : the name of your private key file.</li><li>key_pass : the password to access your private key.</li><li>key_type : your private key's type: PEM (default), DER, or ENG.</li><li>ssl_engine : the engine to use with 'key_type' ENG.</li><li>verify_peer : verify peer certificate (default true).</li><li>verify_host : verify host certificate matches URL (default true).</li><li>ca_file : the certificate(s) file to use for peer verification.</li><li>issuer_cert : the PEM certificate file to validate the issuer of the peer's certificate during peer validation.</li><li>crl_file : the name of the certificate revocation list to use during peer validation.</li><li>ssl_version : use a particular SSL version(s). Possible values are ssl-v3, tls-v1, tls-v1.1, tls-v1.2. Default behaviour is to try tls-v1.2 then tls-v1.1. ssl-v2 is no longer supported and ssl-v3 won't be used unless specified. Specifying tls-v1 will allow connections to use all tls versions (starting with tls-v1.2 down to tls-v1.0).</li><li>cipher_list : Provide a list of ciphers in OpenSSL format to use. By default Iguana uses a list selected for optimal security.</li></ul><u>table</u>",               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug": {
               "Desc": "When true return verbose debug information - errors thrown will also contain debug information (default = false) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "live": {
               "Desc": "When true, requests are sent while in the editor (default = false) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   },
   "put": {
      "ParameterTable": true,
      "Usage": "net.http.put{url=&#60;value&#62; [, timeout=&#60;value&#62;] [, ...]}",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.put",
      "SummaryLine": "Uploads data to an HTTP address using the PUT method.",
      "Desc": "Uploads data to an HTTP address using the PUT method.",
      "Returns": [
         {
            "Desc": "Response data <u>string</u>."
         },
         {
            "Desc": "Response code <u>integer</u>."
         },
         {
            "Desc": "Response headers <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>local Results = net.http.put{url='http://www.interfaceware.com/not-real-example', data='I need a consult!'}</pre>"
      ],
      "Parameters": [
         {
            "url": {
               "Desc": "The URL to upload data to <u>string</u>."
            }
         },
         {
            "data": {
               "Desc": "The data to upload (when 'reader' isn't used) <u>string</u>."
            }
         },
         {
            "reader": {
               "Desc": "The function to call to get more data to upload <u>string</u>."
            }
         },
         {
            "timeout": {
               "Desc": "Timeout for the operation (default = 15 seconds) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "size": {
               "Desc": "The amount of data to expect from 'reader' <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}) <u>table</u>.<br/><br/><b>Note:</b> A few common HTTP headers set to reasonable defaults may be included along with all requests:<ul><li>{['Expect']=''} is always set for HTTP PUT requests. This results in the correct behaviour in most cases. Some servers (<i>e.g.</i>, Microsoft IIS) almost always return a 100-Continue for PUT requests, leading to very slow responses. In this case, it is advised to set {['Expect']='100-Continue'}.</li><li>{['Transfer-Encoding']='chunked'} is used when a 'reader' is given without specifying the 'size' to expect.</li></ul>",
               "Opt": true
            }
         },
         {
            "response_headers_format": {
               "Desc": "Specifies the output format of the response headers: 'default' - a table of key/value pairs from the last response after redirects, where the value is the last value for the given header key; 'raw' - a table containing every line of every header, including redirects; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} where the values are from the last response after redirects <u>table</u>.",
               "Opt": true
            }
         },
         {
            "method": {
               "Desc": "The method to use (default = PUT) <u>string</u>.",
               "Opt": true
            }
         },
         {
            "auth": {
               "Desc": "The 'auth' table, when used, contains these parameters:<br/><ul>   <li>username : the username to send to the HTTP server.</li>   <li>password : the password to send to the HTTP server.</li>   <li>method : optional: the authorization method(s) to allow.  See below.</li>   <li>follow : optional: continue authorization attempts after redirect.This defaults to false to avoid compromising security.</li></ul><p>The authentication method defaults to 'basic', but can be changed to:'digest', 'digest-ie', 'gss-negotiate', 'ntlm', 'any' (allow any method),'anysafe' (not 'basic'), or a combination (e.g., {'digest','digest-ie'}).</p><p>When more than one method is allowed, the server will be asked which it supports before authentication is attempted.</p><u>table</u>",
               "Opt": true
            }
         },
         {
            "ssl": {
               "Desc": "The 'ssl' table, when used, may contain these parameters:<br/><ul><li>cert : the name of your certificate file.</li><li>cert_type : your certificate's type: PEM (default) or DER.</li><li>key : the name of your private key file.</li><li>key_pass : the password to access your private key.</li><li>key_type : your private key's type: PEM (default), DER, or ENG.</li><li>ssl_engine : the engine to use with 'key_type' ENG.</li><li>verify_peer : verify peer certificate (default true).</li><li>verify_host : verify host certificate matches URL (default true).</li><li>ca_file : the certificate(s) file to use for peer verification.</li><li>issuer_cert : the PEM certificate file to validate the issuer of the peer's certificate during peer validation.</li><li>crl_file : the name of the certificate revocation list to use during peer validation.</li><li>ssl_version : use a particular SSL version(s). Possible values are ssl-v3, tls-v1, tls-v1.1, tls-v1.2. Default behaviour is to try tls-v1.2 then tls-v1.1. ssl-v2 is no longer supported and ssl-v3 won't be used unless specified. Specifying tls-v1 will allow connections to use all tls versions (starting with tls-v1.2 down to tls-v1.0).</li><li>cipher_list : Provide a list of ciphers in OpenSSL format to use. By default Iguana uses a list selected for optimal security.</li></ul><u>table</u>",
               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug": {
               "Desc": "When true return verbose debug information - errors thrown will also contain debug information (default = false) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "live": {
               "Desc": "When true, requests are sent while in the editor (default = false) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   },
   "respond": {
      "ParameterTable": true,
      "Usage": "net.http.respond{body=&#60;value&#62; [, code=&#60;value&#62;] [, ...]} <b>or</b> net.http.respond(&#60;value&#62;)",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.respond",
      "SummaryLine": "Sends a response back to the sender of the request.",
      "Desc": "Sends a response back to the sender of the request. Only valid in the context of a From HTTP source.",
      "Returns": [
         {
            "Desc": "The result data or empty string (depending on debug_result parameter) <u>string</u>."
         }
      ],
      "Examples": [
         "<pre>net.http.respond{body='hello world'}</pre>"
      ],
      "Parameters": [
         {
            "body": {
               "Desc": "Body of response to send <u>string</u>."
            }
         },
         {
            "code": {
               "Desc": "HTTP response code to send (default = 200) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}) <u>table</u>.",
               "Opt": true
            }
         },
         {
            "entity_type": {
               "Desc": "Type of response (default = 'text/html') <u>string</u>.",
               "Opt": true
            }
         },
         {
            "use_gzip": {
               "Desc": "Use gzip compression (if request supports it) (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "persist": {
               "Desc": "Include a header in the response to persist the connection (if request supports it) (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug_result": {
               "Desc": "Return the response sent as a string for debug purposes (default = true) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   },
   "parseRequest": {
      "ParameterTable": true,
      "Usage": "net.http.parseRequest{data=&#60;value&#62; [, headers_format=&#60;value&#62;]} <b>or</b> net.http.parseRequest(&#60;value&#62;)",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.parseRequest",
      "SummaryLine": "Parses a string representing a web request.",
      "Desc": "Parses a string representing a web request.",
      "Returns": [
         {
            "Desc": "A table with the following entries: 'body' - the body of the request; 'cookies' - a table of cookie values; 'get_params' - a table of GET variables; 'headers' - a table containing the request headers; 'location' - the location of the request (e.g., '/services'); 'method' - the method of the request (e.g., 'GET'); 'params' - a table containing both GET and POST variables; 'post_params' - a table of POST variables, if the request was a POST with form encoded data <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>net.http.parse{data=MyWebRequest}</pre>"
      ],
      "Parameters": [
         {
            "data": {
               "Desc": "Web request to parse <u>string</u>."
            }
         },
         {
            "headers_format": {
               "Desc": "Specifies the output format of the headers: 'default' - a table of key/value pairs where the value is the last value for the given header key; 'raw' - a table containing every line of every header; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} <u>table</u>.",
               "Opt": true
            }
         }
      ]
   },
   "get": {
      "ParameterTable": true,
      "Usage": "net.http.get{url=&#60;value&#62; [, timeout=&#60;value&#62;] [, ...]} <b>or</b> net.http.get(&#60;value&#62;)",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.get",
      "SummaryLine": "Fetches data from an HTTP address using the GET method.",
      "Desc": "Fetches data from an HTTP address using the GET method.",
      "Returns": [
         {
            "Desc": "Response data <u>string</u>."
         },
         {
            "Desc": "Response code <u>integer</u>."
         },
         {
            "Desc": "Response headers <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>local Results = net.http.get{url='http://www.interfaceware.com', parameters={key='value'}}</pre>"
      ],
      "Parameters": [
         {
            "url": {
               "Desc": "The URL to fetch data from <u>string</u>."
            }
         },
         {
            "timeout": {
               "Desc": "Timeout for the operation (default = 15 seconds) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "parameters": {
               "Desc": "A table of parameters to be passed to the server, and is appended to existing parameters in 'url'. E.g., {q='a name'} would be passed as \"?q=a&percnt;20name\" <u>string</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}) <u>table</u>.",
               "Opt": true
            }
         },
         {
            "response_headers_format": {
               "Desc": "Specifies the output format of the response headers: 'default' - a table of key/value pairs from the last response after redirects, where the value is the last value for the given header key; 'raw' - a table containing every line of every header, including redirects; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} where the values are from the last response after redirects <u>table</u>.",
               "Opt": true
            }
         },
         {
            "method": {
               "Desc": "The method to use (default = GET) <u>string</u>.",
               "Opt": true
            }
         },
         {
            "auth": {
 	       "Desc": "The 'auth' table, when used, contains these parameters:<br/><ul>   <li>username : the username to send to the HTTP server.</li>   <li>password : the password to send to the HTTP server.</li>   <li>method : optional: the authorization method(s) to allow.  See below.</li>   <li>follow : optional: continue authorization attempts after redirect.This defaults to false to avoid compromising security.</li></ul><p>The authentication method defaults to 'basic', but can be changed to:'digest', 'digest-ie', 'gss-negotiate', 'ntlm', 'any' (allow any method),'anysafe' (not 'basic'), or a combination (e.g., {'digest','digest-ie'}).</p><p>When more than one method is allowed, the server will be asked which it supports before authentication is attempted.</p><u>table</u>",
               "Opt": true
            }
         },
         {
            "ssl": {
 	       "Desc": "The 'ssl' table, when used, may contain these parameters:<br/><ul><li>cert : the name of your certificate file.</li><li>cert_type : your certificate's type: PEM (default) or DER.</li><li>key : the name of your private key file.</li><li>key_pass : the password to access your private key.</li><li>key_type : your private key's type: PEM (default), DER, or ENG.</li><li>ssl_engine : the engine to use with 'key_type' ENG.</li><li>verify_peer : verify peer certificate (default true).</li><li>verify_host : verify host certificate matches URL (default true).</li><li>ca_file : the certificate(s) file to use for peer verification.</li><li>issuer_cert : the PEM certificate file to validate the issuer of the peer's certificate during peer validation.</li><li>crl_file : the name of the certificate revocation list to use during peer validation.</li><li>ssl_version : use a particular SSL version(s). Possible values are ssl-v3, tls-v1, tls-v1.1, tls-v1.2. Default behaviour is to try tls-v1.2 then tls-v1.1. ssl-v2 is no longer supported and ssl-v3 won't be used unless specified. Specifying tls-v1 will allow connections to use all tls versions (starting with tls-v1.2 down to tls-v1.0).</li><li>cipher_list : Provide a list of ciphers in OpenSSL format to use. By default Iguana uses a list selected for optimal security.</li></ul><u>table</u>",
               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "live": {
               "Desc": "When true, requests are sent while in the editor (default = false) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug": {
               "Desc": "When true return verbose debug information - errors thrown will also contain debug information (default = false) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   },
   "connectionInfo": {
      "Title": "net.http.connectionInfo",
      "Desc": "Get connection information such as the IP address of the incoming HTTP connection. Only valid in the context of a From HTTP source.",
      "SummaryLine": "Get the connection info (e.g. IP) of the incoming HTTP connection.",
      "Parameters": [],
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Usage": "net.http.connectionInfo()",
      "Examples": [
         "<pre>-- recommended usage: returns \"127.0.0.1\" as a test IP address in the editor (choose your own test IP)\nlocal info = net.http.connectionInfo() or {RemoteAddr='127.0.0.1'}</pre>"
      ]
  },
   "trace": {
      "ParameterTable": true,
      "Usage": "net.http.trace{url=&#60;value&#62; [, timeout=&#60;value&#62;] [, ...]} <b>or</b> net.http.trace(&#60;value&#62;)",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.trace",
      "SummaryLine": "Fetches data from an HTTP address using the TRACE method.",
      "Desc": "Fetches data from an HTTP address using the TRACE method. (Behaves like net.http.post.)",
      "Returns": [
         {
            "Desc": "Response data <u>string</u>."
         },
         {
            "Desc": "Response code <u>integer</u>."
         },
         {
            "Desc": "Response headers <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>local Results = net.http.trace{url='http://www.interfaceware.com',  parameters={key='value'}}</pre>"
      ],
      "Parameters": [
         {
            "url": {
               "Desc": "The URL to fetch data from <u>string</u>."
            }
         },
         {
            "timeout": {
               "Desc": "Timeout for the operation (default = 15 seconds) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "parameters": {
               "Desc": "A table of POST parameters to be passed to the server. E.g., {q='a name'} would be passed as \"q=a&percnt;20name\" <u>string</u>.",
               "Opt": true
            }
         },
         {
            "get_parameters": {
               "Desc": "A table of GET parameters to be passed to the server, and is appended to existing parameters in 'url'. E.g., {q='a name'} would be passed as \"?q=a&percnt;20name\" <u>string</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}). By default, {['Content-Type']='application/x-www-form-urlencoded'} is assumed <u>string</u>.",
               "Opt": true
            }
         },
         {
            "response_headers_format": {
               "Desc": "Specifies the output format of the response headers: 'default' - a table of key/value pairs from the last response after redirects, where the value is the last value for the given header key; 'raw' - a table containing every line of every header, including redirects; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} where the values are from the last response after redirects <u>table</u>.",
               "Opt": true
            }
         },
         {
            "body": {
               "Desc": "Data to be sent to the server. Note that this content should be appropriate for the given headers. No escaping is done. When specified, overrides 'parameters' <u>string</u>.",
               "Opt": true
            }
         },
         {
            "auth": {
 	       "Desc": "The 'auth' table, when used, contains these parameters:<br/><ul>   <li>username : the username to send to the HTTP server.</li>   <li>password : the password to send to the HTTP server.</li>   <li>method : optional: the authorization method(s) to allow.  See below.</li>   <li>follow : optional: continue authorization attempts after redirect.This defaults to false to avoid compromising security.</li></ul><p>The authentication method defaults to 'basic', but can be changed to:'digest', 'digest-ie', 'gss-negotiate', 'ntlm', 'any' (allow any method),'anysafe' (not 'basic'), or a combination (e.g., {'digest','digest-ie'}).</p><p>When more than one method is allowed, the server will be asked which it supports before authentication is attempted.</p> <u>table</u>",
               "Opt": true
            }
         },
         {
            "ssl": {
 	       "Desc": "The 'ssl' table, when used, may contain these parameters:<br/><ul><li>cert : the name of your certificate file.</li><li>cert_type : your certificate's type: PEM (default) or DER.</li><li>key : the name of your private key file.</li><li>key_pass : the password to access your private key.</li><li>key_type : your private key's type: PEM (default), DER, or ENG.</li><li>ssl_engine : the engine to use with 'key_type' ENG.</li><li>verify_peer : verify peer certificate (default true).</li><li>verify_host : verify host certificate matches URL (default true).</li><li>ca_file : the certificate(s) file to use for peer verification.</li><li>issuer_cert : the PEM certificate file to validate the issuer of the peer's certificate during peer validation.</li><li>crl_file : the name of the certificate revocation list to use during peer validation.</li><li>ssl_version : use a particular SSL version(s). Possible values are ssl-v3, tls-v1, tls-v1.1, tls-v1.2. Default behaviour is to try tls-v1.2 then tls-v1.1. ssl-v2 is no longer supported and ssl-v3 won't be used unless specified. Specifying tls-v1 will allow connections to use all tls versions (starting with tls-v1.2 down to tls-v1.0).</li><li>cipher_list : Provide a list of ciphers in OpenSSL format to use. By default Iguana uses a list selected for optimal security.</li></ul> <u>table</u>",
               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug": {
               "Desc": "When true return verbose debug information - errors thrown will also contain debug information (default = false) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "live": {
               "Desc": "When true, requests are sent while in the editor (default = false) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   },
   "head": {
      "ParameterTable": true,
      "Usage": "net.http.head{url=&#60;value&#62; [, timeout=&#60;value&#62;] [, ...]} <b>or</b> net.http.head(&#60;value&#62;)",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.head",
      "SummaryLine": "Fetches data from an HTTP address using the HEAD method.",
      "Desc": "Fetches data from an HTTP address using the HEAD method. (Behaves like net.http.get.)",
      "Returns": [
         {
            "Desc": "Response data <u>string</u>."
         },
         {
            "Desc": "Response code <u>integer</u>."
         },
         {
            "Desc": "Response headers <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>local Results = net.http.head{url='http://www.interfaceware.com', parameters={key='value'}}</pre>"
      ],
      "Parameters": [
         {
            "url": {
               "Desc": "The URL to fetch data from <u>string</u>."
            }
         },
         {
            "timeout": {
               "Desc": "Timeout for the operation (default = 15 seconds) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "parameters": {
               "Desc": "A table of parameters to be passed to the server, and is appended to existing parameters in 'url'. E.g., {q='a name'} would be passed as \"?q=a&percnt;20name\" <u>string</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}) <u>table</u>.",
               "Opt": true
            }
         },
         {
            "response_headers_format": {
               "Desc": "Specifies the output format of the response headers: 'default' - a table of key/value pairs from the last response after redirects, where the value is the last value for the given header key; 'raw' - a table containing every line of every header, including redirects; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} where the values are from the last response after redirects <u>table</u>.",
               "Opt": true
            }
         },
         {
            "auth": {
 	       "Desc": "The 'auth' table, when used, contains these parameters:<br/><ul>   <li>username : the username to send to the HTTP server.</li>   <li>password : the password to send to the HTTP server.</li>   <li>method : optional: the authorization method(s) to allow.  See below.</li>   <li>follow : optional: continue authorization attempts after redirect.This defaults to false to avoid compromising security.</li></ul><p>The authentication method defaults to 'basic', but can be changed to:'digest', 'digest-ie', 'gss-negotiate', 'ntlm', 'any' (allow any method),'anysafe' (not 'basic'), or a combination (e.g., {'digest','digest-ie'}).</p><p>When more than one method is allowed, the server will be asked which it supports before authentication is attempted.</p><u>table</u>",
               "Opt": true
            }
         },
         {
            "ssl": {
 	       "Desc": "The 'ssl' table, when used, may contain these parameters:<br/><ul><li>cert : the name of your certificate file.</li><li>cert_type : your certificate's type: PEM (default) or DER.</li><li>key : the name of your private key file.</li><li>key_pass : the password to access your private key.</li><li>key_type : your private key's type: PEM (default), DER, or ENG.</li><li>ssl_engine : the engine to use with 'key_type' ENG.</li><li>verify_peer : verify peer certificate (default true).</li><li>verify_host : verify host certificate matches URL (default true).</li><li>ca_file : the certificate(s) file to use for peer verification.</li><li>issuer_cert : the PEM certificate file to validate the issuer of the peer's certificate during peer validation.</li><li>crl_file : the name of the certificate revocation list to use during peer validation.</li><li>ssl_version : use a particular SSL version(s). Possible values are ssl-v3, tls-v1, tls-v1.1, tls-v1.2. Default behaviour is to try tls-v1.2 then tls-v1.1. ssl-v2 is no longer supported and ssl-v3 won't be used unless specified. Specifying tls-v1 will allow connections to use all tls versions (starting with tls-v1.2 down to tls-v1.0).</li><li>cipher_list : Provide a list of ciphers in OpenSSL format to use. By default Iguana uses a list selected for optimal security.</li></ul><u>table</u>",
               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug": {
               "Desc": "When true return verbose debug information - errors thrown will also contain debug information (default = false) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "live": {
               "Desc": "When true, requests are sent while in the editor (default = false) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   },
   "options": {
      "ParameterTable": true,
      "Usage": "net.http.options{url=&#60;value&#62; [, timeout=&#60;value&#62;] [, ...]} <b>or</b> net.http.options(&#60;value&#62;)",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.options",
      "SummaryLine": "Fetches data from an HTTP address using the OPTIONS method.",
      "Desc": "Fetches data from an HTTP address using the OPTIONS method. (Behaves like net.http.get.)",
      "Returns": [
         {
            "Desc": "Response data <u>string</u>."
         },
         {
            "Desc": "Response code <u>integer</u>."
         },
         {
            "Desc": "Response headers <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>local Results = net.http.options{url='http://www.interfaceware.com', parameters={key='value'}}</pre>"
      ],
      "Parameters": [
         {
            "url": {
               "Desc": "The URL to fetch data from <u>string</u>."
            }
         },
         {
            "timeout": {
               "Desc": "Timeout for the operation (default = 15 seconds) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "parameters": {
               "Desc": "A table of parameters to be passed to the server, and is appended to existing parameters in 'url'. E.g., {q='a name'} would be passed as \"?q=a&percnt;20name\" <u>string</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}) <u>table</u>.",
               "Opt": true
            }
         },
         {
            "response_headers_format": {
               "Desc": "Specifies the output format of the response headers: 'default' - a table of key/value pairs from the last response after redirects, where the value is the last value for the given header key; 'raw' - a table containing every line of every header, including redirects; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} where the values are from the last response after redirects <u>table</u>.",
               "Opt": true
            }
         },
         {
            "auth": {
 	       "Desc": "The 'auth' table, when used, contains these parameters:<br/><ul>   <li>username : the username to send to the HTTP server.</li>   <li>password : the password to send to the HTTP server.</li>   <li>method : optional: the authorization method(s) to allow.  See below.</li>   <li>follow : optional: continue authorization attempts after redirect.This defaults to false to avoid compromising security.</li></ul><p>The authentication method defaults to 'basic', but can be changed to:'digest', 'digest-ie', 'gss-negotiate', 'ntlm', 'any' (allow any method),'anysafe' (not 'basic'), or a combination (e.g., {'digest','digest-ie'}).</p><p>When more than one method is allowed, the server will be asked which it supports before authentication is attempted.</p><u>table</u>",
               "Opt": true
            }
         },
         {
            "ssl": {
 	       "Desc": "The 'ssl' table, when used, may contain these parameters:<br/><ul><li>cert : the name of your certificate file.</li><li>cert_type : your certificate's type: PEM (default) or DER.</li><li>key : the name of your private key file.</li><li>key_pass : the password to access your private key.</li><li>key_type : your private key's type: PEM (default), DER, or ENG.</li><li>ssl_engine : the engine to use with 'key_type' ENG.</li><li>verify_peer : verify peer certificate (default true).</li><li>verify_host : verify host certificate matches URL (default true).</li><li>ca_file : the certificate(s) file to use for peer verification.</li><li>issuer_cert : the PEM certificate file to validate the issuer of the peer's certificate during peer validation.</li><li>crl_file : the name of the certificate revocation list to use during peer validation.</li><li>ssl_version : use a particular SSL version(s). Possible values are ssl-v3, tls-v1, tls-v1.1, tls-v1.2. Default behaviour is to try tls-v1.2 then tls-v1.1. ssl-v2 is no longer supported and ssl-v3 won't be used unless specified. Specifying tls-v1 will allow connections to use all tls versions (starting with tls-v1.2 down to tls-v1.0).</li><li>cipher_list : Provide a list of ciphers in OpenSSL format to use. By default Iguana uses a list selected for optimal security.</li></ul><u>table</u>",
               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug": {
               "Desc": "When true return verbose debug information - errors thrown will also contain debug information (default = false) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "live": {
               "Desc": "When true, requests are sent while in the editor (default = false) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   },
   "patch": {
      "ParameterTable": true,
      "Usage": "net.http.patch{url=&#60;value&#62; [, timeout=&#60;value&#62;] [, ...]}",
      "SeeAlso": [
         {
            "Title": "The net interface modules - file transfer and email using the FTP, FTPS, HTTP, SFTP and SMTP message protocols",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#net"
         },
         {
            "Title": "Connecting to web services",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0"
         },
         {
            "Title": "HTTP basic authentication",
            "Link": "http://help.interfaceware.com/v6/connecting-to-web-services?v=6.0.0#basic"
         },
         {
            "Title": "Web Services FAQs",
            "Link": "http://help.interfaceware.com/v6/web-service-faqs?v=6.0.0#using-https-to-send-messages-between-iguana-servers?"
         },
         {
            "Title": "Web Services documentation",
            "Link": "http://help.interfaceware.com/category/building-interfaces/interfaces/web-services?v=6.0.0"
         },
         {
            "Title": "Connecting to Highrise CRM using Web Services",
            "Link": "http://help.interfaceware.com/connecting-to-highrise-crm-using-web-services.html?v=6.0.0"
         }
      ],
      "Title": "net.http.patch",
      "SummaryLine": "Uploads data to an HTTP address using the PATCH method.",
      "Desc": "Uploads data to an HTTP address using the PATCH method. (Behaves like net.http.put.)",
      "Returns": [
         {
            "Desc": "Response data <u>string</u>."
         },
         {
            "Desc": "Response code <u>integer</u>."
         },
         {
            "Desc": "Response headers <u>table</u>."
         }
      ],
      "Examples": [
         "<pre>local Results = net.http.patch{url='http://www.interfaceware.com/not-real-example', data='I need a consult!'}</pre>"
      ],
      "Parameters": [
         {
            "url": {
               "Desc": "The URL to upload data to <u>string</u>."
            }
         },
         {
            "data": {
               "Desc": "The data to upload (when 'reader' isn't used) <u>string</u>."
            }
         },
         {
            "reader": {
               "Desc": "The function to call to get more data to upload <u>string</u>."
            }
         },
         {
            "timeout": {
               "Desc": "Timeout for the operation (default = 15 seconds) <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "size": {
               "Desc": "The amount of data to expect from 'reader' <u>integer</u>.",
               "Opt": true
            }
         },
         {
            "headers": {
               "Desc": "A key/value table of HTTP header values (e.g. {['Set-Cookie']='Val'}), or an array of strings (e.g. {'Set-Cookie: Val1','Set-Cookie: Val2'}) <u>table</u>.<ul><li>{['Transfer-Encoding']='chunked'} is used when a 'reader' is given without specifying the 'size' to expect.</li></ul>",
               "Opt": true
            }
         },
         {
            "response_headers_format": {
               "Desc": "Specifies the output format of the response headers: 'default' - a table of key/value pairs from the last response after redirects, where the value is the last value for the given header key; 'raw' - a table containing every line of every header, including redirects; or 'multiple' - a table of key/value pairs of the form {HeaderKey = {Values={Val1,LastVal},Value=LastVal}} where the values are from the last response after redirects <u>table</u>.",
               "Opt": true
            }
         },
         {
            "auth": {
               "Desc": "The 'auth' table, when used, contains these parameters:<br/><ul>   <li>username : the username to send to the HTTP server.</li>   <li>password : the password to send to the HTTP server.</li>   <li>method : optional: the authorization method(s) to allow.  See below.</li>   <li>follow : optional: continue authorization attempts after redirect.This defaults to false to avoid compromising security.</li></ul><p>The authentication method defaults to 'basic', but can be changed to:'digest', 'digest-ie', 'gss-negotiate', 'ntlm', 'any' (allow any method),'anysafe' (not 'basic'), or a combination (e.g., {'digest','digest-ie'}).</p><p>When more than one method is allowed, the server will be asked which it supports before authentication is attempted.</p><u>table</u>",
               "Opt": true
            }
         },
         {
            "ssl": {
               "Desc": "The 'ssl' table, when used, may contain these parameters:<br/><ul><li>cert : the name of your certificate file.</li><li>cert_type : your certificate's type: PEM (default) or DER.</li><li>key : the name of your private key file.</li><li>key_pass : the password to access your private key.</li><li>key_type : your private key's type: PEM (default), DER, or ENG.</li><li>ssl_engine : the engine to use with 'key_type' ENG.</li><li>verify_peer : verify peer certificate (default true).</li><li>verify_host : verify host certificate matches URL (default true).</li><li>ca_file : the certificate(s) file to use for peer verification.</li><li>issuer_cert : the PEM certificate file to validate the issuer of the peer's certificate during peer validation.</li><li>crl_file : the name of the certificate revocation list to use during peer validation.</li><li>ssl_version : use a particular SSL version(s). Possible values are ssl-v3, tls-v1, tls-v1.1, tls-v1.2. Default behaviour is to try tls-v1.2 then tls-v1.1. ssl-v2 is no longer supported and ssl-v3 won't be used unless specified. Specifying tls-v1 will allow connections to use all tls versions (starting with tls-v1.2 down to tls-v1.0).</li><li>cipher_list : Provide a list of ciphers in OpenSSL format to use. By default Iguana uses a list selected for optimal security.</li></ul><u>table</u>",
               "Opt": true
            }
         },
         {
            "cache_connection_by_host": {
               "Desc": "When true, re-use the HTTP connection for subsequent requests to the same host. When false, re-use the connection for subsequent requests to the same URL, including the path but not including the query string. (default = true) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "debug": {
               "Desc": "When true return verbose debug information - errors thrown will also contain debug information (default = false) <u>boolean</u>.",
               "Opt": true
            }
         },
         {
            "live": {
               "Desc": "When true, requests are sent while in the editor (default = false) <u>boolean</u>.",
               "Opt": true
            }
         }
      ]
   }
}
