{
   "date": {
      "Parameters": [
         {
            "format": {
               "Desc": "Format string <u>string</u>."
            },
         },
         {
           "time": {
               "Desc": "Time to be formatted (as a Unix Epoch time in seconds) <u>integer</u>.",
               "Opt": true
            }
         } 
      ],
      "Returns": [
         {
            "Desc": "Either date and time as a string <u>string</u>. <strong>OR</strong> date and time as a table <u>table</u>."
         }
      ],
      "Title": "os.ts.date",
      "SummaryLine": "Returns a string or a table containing date and time,",
      "Examples": [
         "-- today's date and time <br/>local todayDateTime = os.ts.date('%c')",
         "-- today's date and time (default format = '%c') <br/>local todayDateTime = os.ts.date()",
         "-- today's UTC date returned in a table <br/>local todayDateTime = os.ts.date('!*t')",
         "--  using Unix Epoch Time input generated from os.ts.time()<br/>os.ts.date('%c',os.ts.time{year=1999, month=12, day=1}) -- date returned as formatted string<br/>os.ts.date('*t',os.ts.time{year=1999, month=12, day=1}) -- date returned as a table<br/>os.ts.date(_,os.ts.time{year=1999, month=12, day=1})    -- date returned as formatted string<br/>os.ts.date('',os.ts.time{year=1999, month=12, day=1})   -- returns '' (an empty string)"
      ],
      "Usage": "os.ts.date([format [, time]])",
      "SeeAlso": [
         {
            "Title": "The os modules - operating system utilities",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#os"
         },
         {
            "Title": "The evolution of Iguana Date and Time functions",
            "Link": "http://help.interfaceware.com/the-evolution-of-iguana-date-and-time-functions.html?v=6.0.0"
         },
         {
            "Title": "Date/time conversion: Using the fuzzy date/time parser ",
            "Link": "http://help.interfaceware.com/datetime-conversion-using-the-fuzzy-datetime-parser.html?v=6.0.0"
         },
         {
            "Title": "Get time and date",
            "Link": "http://help.interfaceware.com/code/details/get-time-and-date?v=6.0.0"
         },
         {
            "Title": "Using os.date to output arbitrary date/time formats",
            "Link": "http://help.interfaceware.com/datetime-conversion-using-the-fuzzy-datetime-parser.html?v=6.0.0#menu9"
         },
         {
            "Title": "Lua 5.0 online documentation for os.date and os.time(with strftime codes)",
            "Link": "http://www.lua.org/pil/22.1.html"
         }
      ],
      "Desc": "Returns a string or a table containing date and time, formatted according to the given string <code>format</code>.   <br><br><strong>Note</strong>: <code>os.ts.date</code> is identical to <code>os.date</code>, except that <code>os.date</code>  takes a custom time format (userdata) returned from <code>os.time</code> for the \"time\" parameter.<br><br> If the <code>time</code> argument is present, this is the <a href=\"http://en.wikipedia.org/wiki/Unix_time\">Unix Epoch time</a> as an integer. Otherwise, <code>os.ts.date</code> formats the current time.   <br><br> If <code>format</code> starts with '<code>!</code>', then the date is formatted in Coordinated Universal Time (UTC). <br/><br/> If <code>format</code> starts with '<code>*t</code>', then <code>os.ts.date</code> returns a table with the following fields: <code>year</code> (four digits), <code>month</code> (1--12), <code>day</code> (1--31), <code>hour</code> (0--23), <code>min</code> (0--59), <code>sec</code> (0--61), <code>wday</code> (weekday, Sunday is&nbsp;1), <code>yday</code> (day of the year), and <code>isdst</code> (daylight saving flag, a boolean).   <br><br> If <code>format</code> is not '<code>*t</code>', then <code>os.ts.date</code> returns the date as a string, formatted according to the same rules as the C&nbsp;function <code>strftime</code>.   <br><br><strong>Note</strong>: '<code>!</code>' + '<code>*t</code>' can be combined as '<code>!*t</code>' to return Coordinated Universal Time (UTC) in a table.<br><br> When called without arguments, <code>os.ts.date</code> returns a reasonable date and time representation that depends on the host system and on the current locale (that is, <code>os.ts.date()</code> is equivalent to <code>os.ts.date('%c')</code>).<br><br> This table gives the strftime codes that are accepted. <br><br> <table class=\"Basic\" style=\"width:100%\"> <tbody> <tr> <th style='width: 4em' scope='col'> Code</th> <th scope='col'> Replaced by</th> <th scope='col'> Example</th> </tr> <tr> <td> %a</td> <td> Abbreviated weekday name&nbsp;</td> <td> Thu</td> </tr> <tr> <td> %A</td> <td> Full weekday name&nbsp;</td> <td> Thursday</td> </tr>  <tr> <td> %b</td> <td> Abbreviated month name&nbsp;</td> <td> Aug</td> </tr> <tr> <td> %B</td> <td> Full month name&nbsp;</td> <td> August</td> </tr> <tr> <td> %c</td> <td> Date and time representation&nbsp;</td> <td> Thu Aug 23 14:55:02 2001</td> </tr> <tr> <td> %d</td> <td> Day of the month (01-31)</td> <td> 23</td> </tr> <tr> <td> %H</td> <td> Hour in 24h format (00-23)</td> <td> 14</td> </tr> <tr> <td> %I</td> <td> Hour in 12h format (01-12)</td> <td> 02</td> </tr> <tr> <td> %j</td> <td> Day of the year (001-366)</td> <td> 235</td> </tr> <tr> <td> %m</td> <td> Month as a decimal number (01-12)</td> <td> 08</td> </tr> <tr> <td> %M</td> <td> Minute (00-59)</td> <td> 55</td> </tr> <tr> <td> %p</td> <td> AM or PM designation</td> <td> PM</td> </tr> <tr> <td> %S</td> <td> Second (00-61)</td> <td> 02</td> </tr> <tr> <td> %U</td> <td> Week number with the first Sunday as the first day of week one (00-53)</td> <td> 33</td> </tr> <tr> <td> %w</td> <td> Weekday as a decimal number with Sunday as&nbsp;0&nbsp;(0-6)</td> <td> 4</td> </tr> <tr> <td> %W</td> <td> Week number with the first Monday as the first day of week one (00-53)</td> <td> 34</td> </tr> <tr> <td> %x</td> <td> Date representation *</td> <td> 08/23/01</td> </tr> <tr> <td> %X</td> <td> Time representation *</td> <td> 14:55:02</td> </tr> <tr> <td> %y</td> <td> Year, last two digits (00-99)</td> <td> 01</td> </tr> <tr> <td> %Y</td> <td> Year</td> <td> 2001</td> </tr> <tr> <td> %%</td> <td> A&nbsp;%&nbsp;sign</td> <td> %<br> &nbsp;</td> </tr> </tbody> </table>"
   },
   "time": {
      "Parameters": [
         {
            "time": {
               "Desc": "A table containing the the date and time to be formatted <u>table</u>.",
               "Opt": true
            }
         }
      ],
      "Returns": [
         {
            "Desc": "A Unix Epoch time in seconds <u>integer</u>."
         }
      ],
      "Title": "os.ts.time",
      "SummaryLine": "Returns the current time when called without arguments,",
      "Usage": "os.ts.time([time])",
      "Examples": [
         "get the current date/time<br/>os.ts.time()",
         "specify date/time in a table (mandatory fields)<br/>os.ts.time{year=1999, month=12, day=01}",
         "specify date/time in a table (all fields)<br/>os.ts.time{year=1999, month=12, day=1, hour=22, min=23, sec=24}"
      ],
      "SeeAlso": [
         {
            "Title": "The os modules - operating system utilities",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#os"
         },
         {
            "Title": "The evolution of Iguana Date and Time functions",
            "Link": "http://help.interfaceware.com/the-evolution-of-iguana-date-and-time-functions.html?v=6.0.0"
         },
         {
            "Title": "Get time and date",
            "Link": "http://help.interfaceware.com/code/details/get-time-and-date?v=6.0.0"
         },
         {
            "Title": "Get the seconds between two times",
            "Link": "http://help.interfaceware.com/code/details/get-the-seconds-between-two-times?v=6.0.0"
         },
         {
            "Title": "Date/time conversion: Using the fuzzy date/time parser ",
            "Link": "http://help.interfaceware.com/datetime-conversion-using-the-fuzzy-datetime-parser.html?v=6.0.0"
         },
         {
            "Title": "Lua 5.0 online documentation for os.date and os.time(with strftime codes)",
            "Link": "http://www.lua.org/pil/22.1.html"
         }
      ],
      "Desc": "Returns the current time when called without arguments, or a time representing the date and time specified by the given table.<br><br><strong>Note</strong>: <code>os.ts.time</code> is identical to <code>os.time</code>, except that <code>os.time</code>  returns a custom time format (userdata).<br/><br/>If specified the  table must have fields <code>year</code>, <code>month</code>, and <code>day</code>, and may have fields <code>hour</code>, <code>min</code>, <code>sec</code>, and <code>isdst</code> (for a description of these fields, see the <code>os.ts.date</code> function). The value returned by <code>os.ts.time</code> is a <a href=\"http://en.wikipedia.org/wiki/Unix_time\">Unix Epoch time</a> as an integer, which can be used as an argument to <code>os.ts.date</code> and <code>os.ts.difftime</code>.<br/><br/><strong>Note</strong>: To find the difference duration between two times use <code>os.ts.difftime</code>, which takes into account time zones and daylight saving. Subtracting Unix Epoch time values directly <i>does not work</i>, because it doesn't take into account time zones and daylight saving."
   },
   "difftime": {
      "Parameters": [
         {
            "t2": {
               "Desc": "End time (as a Unix Epoch time in seconds) <u>integer</u>."
            }
         },
         {
            "t1": {
               "Desc": "Start time (as a Unix Epoch time in seconds) <u>integer</u>."
            }
         }
      ],
      "Returns": [
         {
            "Desc": "The number of seconds from time <code>t1</code> to time <code>t2</code> <u>integer</u>."
         }
      ],
      "Title": "os.ts.difftime",
      "SummaryLine": "Returns the number of seconds from time <code>t1</code> to time <code>t2</code>.",
      "Usage": "os.ts.difftime(t2, t1)",
      "Examples": [
         "-- get the difference between the current time and another time<br>os.ts.difftime(os.ts.time(), os.ts.time{year=1999, month=12, day=01, hour=22})",
      ],
      "SeeAlso": [
         {
            "Title": "The os modules - operating system utilities",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#os"
         },
         {
            "Title": "The evolution of Iguana Date and Time functions",
            "Link": "http://help.interfaceware.com/the-evolution-of-iguana-date-and-time-functions.html?v=6.0.0"
         },
         {
            "Title": "Get the seconds between two times",
            "Link": "http://help.interfaceware.com/code/details/get-the-seconds-between-two-times?v=6.0.0"
         },
         {
            "Title": "Parse any date time value",
            "Link": "http://help.interfaceware.com/v6/dateparse?v=6.0.0"
         },
         {
            "Title": "Date/time conversion: Using the fuzzy date/time parser ",
            "Link": "http://help.interfaceware.com/datetime-conversion-using-the-fuzzy-datetime-parser.html?v=6.0.0"
         }
      ],
      "Desc": "Returns the number of seconds from time <code>t1</code> to time <code>t2</code>.  It is important to use this function rather than comparing dates directly, since this function will take into account time zones and daylight saving.<br><br><strong>Note</strong>: <code>os.ts.difftime</code> is identical to <code>os.difftime</code>, except that <code>os.difftime</code>   takes the custom time format (userdata) returned from <code>os.time</code> for the \"t2\" and \"t1\" parameters.<br><br><b>Note:</b> the time parameters must be supplied in <a href=\"http://en.wikipedia.org/wiki/Unix_time\">Unix Epoch time </a> as integers (same format as returned from <code>os.ts.time</code> or <code>os.ts.gmtime</code>), dates formatted as strings do not work."
   },
   "gmtime": {
      "Parameters": [
         {
            "time": {
               "Desc": "A table containing the the date and time to be formatted <u>table</u>.",
               "Opt": true
            }
         }
      ],
      "Returns": [
         {
            "Desc": "A Unix Epoch time in seconds <u>integer</u>."
         }
      ],
      "Title": "os.ts.gmtime",
      "SummaryLine": "Returns the time in a <a href=\"http://en.wikipedia.org/wiki/Unix_time\">Unix Epoch format</a>.",
      "Usage": "os.ts.gmtime([time])",
      "Examples": [
         "get the current date/time<br/>os.ts.gmtime()",
         "specify date/time in a table (mandatory fields)<br/>os.ts.gmtime{year=1999, month=12, day=01}",
         "specify date/time in a table (all fields)<br/>os.ts.gmtime{year=1999, month=12, day=1, hour=22, min=23, sec=24}"
      ],
      "SeeAlso": [
         {
            "Title": "The os modules - operating system utilities",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#os"
         },
         {
            "Title": "The evolution of Iguana Date and Time functions",
            "Link": "http://help.interfaceware.com/the-evolution-of-iguana-date-and-time-functions.html?v=6.0.0"
         },
         {
            "Title": "Date/time conversion: Using the fuzzy date/time parser ",
            "Link": "http://help.interfaceware.com/datetime-conversion-using-the-fuzzy-datetime-parser.html?v=6.0.0"
         },
         {
            "Title": "Lua 5.0 online documentation for os.date and os.time(with strftime codes)",
            "Link": "http://www.lua.org/pil/22.1.html"
         }
      ],
      "Desc": "Returns the current time when called without arguments, or a time representing the date and time specified by the given table.<br><br><strong>Note</strong>: <code>os.ts.gmtime</code> is identical to <code>os.ts.time</code>.<br/><br/>If specified the  table must have fields <code>year</code>, <code>month</code>, and <code>day</code>, and may have fields <code>hour</code>, <code>min</code>, <code>sec</code>, and <code>isdst</code> (for a description of these fields, see the <code>os.ts.date</code> function). The value returned by <code>os.ts.time</code> is a <a href=\"http://en.wikipedia.org/wiki/Unix_time\">Unix Epoch time</a> as an integer, which can be used as an argument to <code>os.ts.date</code> and <code>os.ts.difftime</code>.<br/><br/><strong>Note</strong>: To find the difference duration between two times use <code>os.ts.difftime</code>, which takes into account time zones and daylight saving. Subtracting Unix Epoch time values directly <i>does not work</i>, because it doesn't take into account time zones and daylight saving."
   },
   "gmdate": {
      "Parameters": [
         {
            "format": {
               "Desc": "Format string <u>string</u>."
            }
         },
         {
            "time": {
               "Desc": "Time to be formatted (as a Unix Epoch time in seconds) <u>integer</u>."
            }
         }
      ],
      "Returns": [
         {
            "Desc": "Either date and time as a string <u>string</u>. <strong>OR</strong> date and time as a table <u>table</u>."
         }
      ],
      "Title": "os.ts.gmdate",
      "SummaryLine": "Returns a string or a table containing date and time.",
      "Examples": [
         "-- today's date and time <br/>local todayDateTime = os.ts.gmdate('%c')",
         "-- today's date and time (default format = '%c') <br/>local todayDateTime = os.ts.gmdate()",
         "-- today's UTC date returned in a table <br/>local todayDateTime = os.ts.gmdate('!*t')",
         "--  using Unix Epoch Time input generated from os.ts.time()<br/>os.ts.gmdate('%c',os.ts.time{year=1999, month=12, day=1}) -- date returned as formatted string<br/>os.ts.gmdate('*t',os.ts.time{year=1999, month=12, day=1}) -- date returned as a table<br/>os.ts.date(_,os.ts.time{year=1999, month=12, day=1})    -- date returned as formatted string<br/>os.ts.gmdate('',os.ts.time{year=1999, month=12, day=1})   -- returns '' (an empty string)"
      ],
      "Usage": "os.ts.gmdate([format [, time]])",
      "SeeAlso": [
         {
            "Title": "The os modules - operating system utilities",
            "Link": "http://help.interfaceware.com/api/?v=6.0.0#os"
         },
         {
            "Title": "The evolution of Iguana Date and Time functions",
            "Link": "http://help.interfaceware.com/the-evolution-of-iguana-date-and-time-functions.html?v=6.0.0"
         },
         {
            "Title": "Date/time conversion: Using the fuzzy date/time parser ",
            "Link": "http://help.interfaceware.com/datetime-conversion-using-the-fuzzy-datetime-parser.html?v=6.0.0"
         },
         {
            "Title": "Using os.date to output arbitrary date/time formats",
            "Link": "http://help.interfaceware.com/datetime-conversion-using-the-fuzzy-datetime-parser.html?v=6.0.0#menu9"
         },
         {
            "Title": "Lua 5.0 online documentation for os.date and os.time(with strftime codes)",
            "Link": "http://www.lua.org/pil/22.1.html"
         }
      ],
      "Desc": "Returns a Coordinated Universal Time (UTC) as a string or a table containing date and time, formatted according to the given string <code>format</code>.   <br><br><strong>Note</strong>: <code>os.ts.gmdate</code> is identical to <code>os.ts.date</code>, except that <code>os.ts.gmdate</code>  always returns a UTC date.<br><br> If the <code>time</code> argument is present, this is the time to be formatted (a <a href=\"http://en.wikipedia.org/wiki/Unix_time\">Unix Epoch time</a> integer value). Otherwise, <code>os.ts.gmdate</code> formats the current time.   <br><br>The date is always formatted in Coordinated Universal Time (UTC). If <code>format</code> is the string '<code>*t</code>', then <code>os.ts.gmdate</code> returns a table with the following fields: <code>year</code> (four digits), <code>month</code> (1--12), <code>day</code> (1--31), <code>hour</code> (0--23), <code>min</code> (0--59), <code>sec</code> (0--61), <code>wday</code> (weekday, Sunday is&nbsp;1), and <code>yday</code> (day of the year).   <br><br> If <code>format</code> is not '<code>*t</code>', then <code>os.ts.gmdate</code> returns the date as a string, formatted according to the same rules as the C&nbsp;function <code>strftime</code>.   <br><br> When called without arguments, <code>os.ts.gmdate</code> returns a reasonable date and time representation that depends on the host system and on the current locale (that is, <code>os.ts.gmdate()</code> is equivalent to <code>os.ts.gmdate('&#37;c')</code>).<br><br> This table gives the strftime codes that are accepted. <br><br> <table class=\"Basic\" style=\"width:100%\"> <tbody> <tr> <th style='width: 4em' scope='col'> Code</th> <th scope='col'> Replaced by</th> <th scope='col'> Example</th> </tr> <tr> <td> &#37;a</td> <td> Abbreviated weekday name&nbsp;</td> <td> Thu</td> </tr> <tr> <td> &#37;A</td> <td> Full weekday name&nbsp;</td> <td> Thursday</td> </tr>  <tr> <td> &#37;b</td> <td> Abbreviated month name&nbsp;</td> <td> Aug</td> </tr> <tr> <td> &#37;B</td> <td> Full month name&nbsp;</td> <td> August</td> </tr> <tr> <td> &#37;c</td> <td> Date and time representation&nbsp;</td> <td> Thu Aug 23 14:55:02 2001</td> </tr> <tr> <td> &#37;d</td> <td> Day of the month (01-31)</td> <td> 23</td> </tr> <tr> <td> &#37;H</td> <td> Hour in 24h format (00-23)</td> <td> 14</td> </tr> <tr> <td> &#37;I</td> <td> Hour in 12h format (01-12)</td> <td> 02</td> </tr> <tr> <td> &#37;j</td> <td> Day of the year (001-366)</td> <td> 235</td> </tr> <tr> <td> &#37;m</td> <td> Month as a decimal number (01-12)</td> <td> 08</td> </tr> <tr> <td> &#37;M</td> <td> Minute (00-59)</td> <td> 55</td> </tr> <tr> <td> &#37;p</td> <td> AM or PM designation</td> <td> PM</td> </tr> <tr> <td> &#37;S</td> <td> Second (00-61)</td> <td> 02</td> </tr> <tr> <td> &#37;U</td> <td> Week number with the first Sunday as the first day of week one (00-53)</td> <td> 33</td> </tr> <tr> <td> &#37;w</td> <td> Weekday as a decimal number with Sunday as&nbsp;0&nbsp;(0-6)</td> <td> 4</td> </tr> <tr> <td> &#37;W</td> <td> Week number with the first Monday as the first day of week one (00-53)</td> <td> 34</td> </tr> <tr> <td> &#37;x</td> <td> Date representation *</td> <td> 08/23/01</td> </tr> <tr> <td> &#37;X</td> <td> Time representation *</td> <td> 14:55:02</td> </tr> <tr> <td> &#37;y</td> <td> Year, last two digits (00-99)</td> <td> 01</td> </tr> <tr> <td> &#37;Y</td> <td> Year</td> <td> 2001</td> </tr> <tr> <td> &#37;&#37;</td> <td> A&nbsp;&#37;&nbsp;sign</td> <td> &#37;<br> &nbsp;</td> </tr> </tbody> </table>"
   },
}
